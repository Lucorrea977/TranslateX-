{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\OneDrive\\\\Documentos\\\\TranslateX-\\\\TranslateX\\\\src\\\\components\\\\VoiceTranslator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceTranslator = ({\n  targetLang\n}) => {\n  _s();\n  const [translated, setTranslated] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const recognitionRef = useRef(null);\n  useEffect(() => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      alert('Tu navegador no soporta reconocimiento de voz');\n      return;\n    }\n    const recognition = new SpeechRecognition();\n    recognition.lang = 'en-US';\n    recognition.continuous = false;\n    recognition.interimResults = false;\n    recognition.onresult = async event => {\n      const speechText = event.results[0][0].transcript;\n      try {\n        const res = await axios.post('https://libretranslate.de/translate', {\n          q: speechText,\n          source: 'auto',\n          target: targetLang,\n          format: 'text'\n        });\n        setTranslated(res.data.translatedText);\n      } catch (error) {\n        console.error(error);\n        setTranslated('Error al traducir la voz.');\n      }\n    };\n    recognition.onend = () => {\n      setIsListening(false);\n    };\n    recognition.onerror = event => {\n      console.error('Recognition error:', event.error);\n      setIsListening(false);\n    };\n    recognitionRef.current = recognition;\n  }, [targetLang]);\n  const handleStartListening = () => {\n    if (isListening || !recognitionRef.current) return;\n    setIsListening(true);\n    recognitionRef.current.start();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartListening,\n      className: `px-4 py-2 rounded text-white ${isListening ? 'bg-gray-400' : 'bg-blue-500 hover:bg-blue-600'}`,\n      disabled: isListening,\n      children: \"\\uD83C\\uDFA4 Traducir por voz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), translated && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-3 p-2 bg-gray-100 dark:bg-gray-700 rounded\",\n      children: translated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceTranslator, \"1tmiqc6KeOiz/2oujAnfnQXc7xA=\");\n_c = VoiceTranslator;\nexport default VoiceTranslator;\nvar _c;\n$RefreshReg$(_c, \"VoiceTranslator\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","VoiceTranslator","targetLang","_s","translated","setTranslated","isListening","setIsListening","recognitionRef","SpeechRecognition","window","webkitSpeechRecognition","alert","recognition","lang","continuous","interimResults","onresult","event","speechText","results","transcript","res","post","q","source","target","format","data","translatedText","error","console","onend","onerror","current","handleStartListening","start","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/asus/OneDrive/Documentos/TranslateX-/TranslateX/src/components/VoiceTranslator.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst VoiceTranslator = ({ targetLang }) => {\r\n  const [translated, setTranslated] = useState('');\r\n  const [isListening, setIsListening] = useState(false);\r\n  const recognitionRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n\r\n    if (!SpeechRecognition) {\r\n      alert('Tu navegador no soporta reconocimiento de voz');\r\n      return;\r\n    }\r\n\r\n    const recognition = new SpeechRecognition();\r\n    recognition.lang = 'en-US';\r\n    recognition.continuous = false;\r\n    recognition.interimResults = false;\r\n\r\n    recognition.onresult = async (event) => {\r\n      const speechText = event.results[0][0].transcript;\r\n\r\n      try {\r\n        const res = await axios.post('https://libretranslate.de/translate', {\r\n          q: speechText,\r\n          source: 'auto',\r\n          target: targetLang,\r\n          format: 'text',\r\n        });\r\n        setTranslated(res.data.translatedText);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setTranslated('Error al traducir la voz.');\r\n      }\r\n    };\r\n\r\n    recognition.onend = () => {\r\n      setIsListening(false);\r\n    };\r\n\r\n    recognition.onerror = (event) => {\r\n      console.error('Recognition error:', event.error);\r\n      setIsListening(false);\r\n    };\r\n\r\n    recognitionRef.current = recognition;\r\n  }, [targetLang]);\r\n\r\n  const handleStartListening = () => {\r\n    if (isListening || !recognitionRef.current) return;\r\n\r\n    setIsListening(true);\r\n    recognitionRef.current.start();\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-6\">\r\n      <button\r\n        onClick={handleStartListening}\r\n        className={`px-4 py-2 rounded text-white ${isListening ? 'bg-gray-400' : 'bg-blue-500 hover:bg-blue-600'}`}\r\n        disabled={isListening}\r\n      >\r\n        ðŸŽ¤ Traducir por voz\r\n      </button>\r\n\r\n      {translated && (\r\n        <p className=\"mt-3 p-2 bg-gray-100 dark:bg-gray-700 rounded\">\r\n          {translated}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoiceTranslator;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}